---
interface Props {
	title: string;
}
const { title } = Astro.props;
import cursor from '../assets/cursor.png';
import cursor_type from '../assets/cursor-type.png';
import cursor_hand from '../assets/cursor-hand.png';
---
<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Blockman Launcher" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="https://raw.githubusercontent.com/SpargatTeam/BlockmanLORD/main/res/mipmap-xxxhdpi/app_launcher.png" />
		<meta name="generator" content={Astro.generator ?? 'Astro'} />
		<title>BlockmanLORD</title>
	</head>
	<body>
		<slot />
	</body>
</html>
<style is:global>
	:root {
		--accent: #6c14bee0;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	::-moz-selection {
		background: var(--accent);
		color: white;
	}
	::selection {
		background: var(--accent);
		color: white;
	}
	body {
  background-color: rgb(0, 0, 0); 
  background-image: 
    linear-gradient(45deg, #00FF00, #9B00FF), 
    linear-gradient(45deg, #000000, #0033FF); 
  background-blend-mode: overlay; 
  background-size: 500% 500%; 
  background-position: 0% 0%; 
  height: 100vh;
  margin: 0;
  position: relative;
  animation: moveBackground 10s linear infinite; 
}

body::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.4); 
  pointer-events: none;
}

@keyframes moveBackground {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}

.path {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
  opacity: 0.2;
  background-image: 
    linear-gradient(90deg, #00FF00 10%, transparent 30%),
    linear-gradient(90deg, #9B00FF 50%, transparent 70%);
  animation: movePaths 5s ease-in-out infinite;
  mix-blend-mode: multiply;
}

@keyframes movePaths {
  0% {
    transform: translateX(0) translateY(0);
  }
  25% {
    transform: translateX(20%) translateY(30%);
  }
  50% {
    transform: translateX(50%) translateY(20%);
  }
  75% {
    transform: translateX(-30%) translateY(-10%);
  }
  100% {
    transform: translateX(0) translateY(0);
  }
}
	html {
		color: white;
		font-family: system-ui, sans-serif;
		cursor: url("{cursor.src}"), auto; 
	}
	input[type="text"],
	textarea {
		cursor: url("{cursor_type.src}"), auto;
	}
	button,
	img,
	a,
	span,
	li,
	ul {
		cursor: url("{curosr_hand.src}"), auto; 
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
</style>