name: CMake Build

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug]
        c_compiler: [clang]
        cpp_compiler: [clang++]
        framework: [gl, vk]
        dev: [BlockmanLORD, GameServer, BlockmanEditor]
        exclude:
          - os: ubuntu-latest
            framework: d3d
          - os: macos-latest
            framework: d3d

    steps:
    - uses: actions/checkout@v4

    # vulkan 1.3
    - name: Prepare Vulkan SDK
      uses: SpargatTeam/setup-vulkan-sdk@1.2.1
      if: matrix.framework == 'vk'
      with:
          vulkan-query-version: 1.3.283.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          # vulkan-use-cache: true # what if we remove this? is cache v2 no longer used?

    # directx 10, 11 and 12
    - name: Install DirectX SDK (Windows)
      if: matrix.os == 'windows-latest' && matrix.framework == 'd3d'
      run: |
        choco install directx -y

    # made on linux
    - name: Setup libs and depencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd libs
        git clone https://github.com/madler/zlib zlib
        git clone https://github.com/assimp/assimp assimp
        git clone https://github.com/bulletphysics/bullet3 bullet
        git clone https://github.com/curl/curl curl
        git clone https://github.com/libsdl-org/SDL sdl
        curl -L -o boost_1_87_0.zip https://archives.boost.io/release/1.87.0/source/boost_1_87_0.zip
        unzip -q boost_1_87_0.zip
        mv boost_1_87_0 boost
        cd ../
        # dev
        sudo apt install -y build-essential curl git upx binutils 
        # x11
        sudo apt install -y libxcursor-dev libxinerama-dev libx11-dev libxext-dev libxrandr-dev libxi-dev libxtst-dev libxfixes-dev libxcb1-dev libxkbcommon-dev libxaw7-dev 
        # wayland
        sudo apt install -y wayland-protocols libwayland-dev wayland-scanner++ 
        # boost
        sudo apt install -y libboost-all-dev 
        # text, font etc
        sudo apt install -y libpng-dev libjpeg-dev libtiff-dev libopenexr-dev libfreeimage-dev libfreetype6-dev 
        # xml
        sudo apt install -y libpugixml-dev libjsoncpp-dev 

    # made on windows
    - name: Setup libs and dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd libs
        git clone https://github.com/madler/zlib zlib
        git clone https://github.com/assimp/assimp assimp
        git clone https://github.com/curl/curl curl
        git clone https://github.com/libsdl-org/SDL sdl
        curl -L -o boost_1_87_0.zip https://archives.boost.io/release/1.87.0/source/boost_1_87_0.zip
        choco install 7zip -y
        7z x boost_1_87_0.zip
        ren boost_1_87_0 boost
        cd ../
        choco install visualstudio2019buildtools

    # made on macos
    - name: Setup libs and dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        cd libs
        git clone https://github.com/madler/zlib zlib
        git clone https://github.com/assimp/assimp assimp
        git clone https://github.com/curl/curl curl
        git clone https://github.com/libsdl-org/SDL sdl
        curl -L -o boost_1_87_0.zip https://archives.boost.io/release/1.87.0/source/boost_1_87_0.zip
        unzip -q boost_1_87_0.zip
        mv boost_1_87_0 boost
        cd ../
        # dev
        brew install cmake curl git upx binutils
        # x11
        brew install libxcursor libxinerama libx11 libxext libxrandr libxi libxtst libxfixes libxcb libxkbcommon libxaw
        # boost
        brew install boost
        # text, font etc
        brew install libpng libjpeg libtiff openexr freeimage freetype
        # xml
        brew install pugixml jsoncpp

    - name: Configure CMake
      run: >
        cmake -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBLORD_MODEL=${{ matrix.framework }} -DBLORD_BUILD=${{ matrix.dev }}

    - name: Build
      run: cmake --build .

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        name: ${{ matrix.dev }}-buildOn.${{ matrix.os }}-modelSystem.${{ matrix.framework }}
        path: ${{ github.workspace }}